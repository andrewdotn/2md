#!/usr/bin/env node -r ./babel-register

import { join as joinPath } from "path";
import { readFileSync, writeFileSync } from "fs";
import remark from "remark";
import html from "remark-html";

// This file is using the babel settings for a browser
import "regenerator-runtime";

async function main() {
  const targetFile = joinPath(__dirname, "..", "src", "generated-fixtures.ts");

  const fixtures = [];
  for (const [name, path] of [
    ["Ars Technica", "2md/fixtures/quote1.html"],
    ["MDN", "2md/fixtures/quote2.html"],
    ["Node JS", "2md/fixtures/nodejs.html"],
    ["Stack Overflow", "2md/fixtures/quote3.html"],
    ["Nested lists", "2md/fixtures/nested-lists.md"]
  ]) {
    let contents = readFileSync(require.resolve(path)).toString();
    if (path.endsWith(".md")) {
      contents = (
        await remark()
          .use(html)
          .process(contents)
      ).contents.toString();
    }

    fixtures.push([name, contents]);
  }

  const output = `\
// auto-generated by gen-fixtures.ts

export const fixtures = new Map(${JSON.stringify(fixtures, null, 2)});`;

  writeFileSync(targetFile, output);
  console.log(`wrote ${targetFile}`);
}

if (require.main === module) {
  main().catch(e => {
    console.error(e);
    process.exit(1);
  });
}
